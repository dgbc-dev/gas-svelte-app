{
  "compilerOptions": {
    "moduleResolution": "bundler",
    "target": "ESNext",
    "module": "ESNext",
    /**
     * svelte-preprocess cannot figure out whether you have
     * a value or a type, so tell TypeScript to enforce using
     * `import type` instead of `import` for Types.
     */
    "verbatimModuleSyntax": true,
    "isolatedModules": true,
    "resolveJsonModule": true,
    /**
     * To have warnings / errors of the Svelte compiler at the
     * correct position, enable source maps by default.
     */
    "sourceMap": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    /**
     * Typecheck JS in `.svelte` and `.js` files by default.
     * Disable this if you'd like to use dynamic types.
     */
    "checkJs": true
  },
  /**
   * Use global.d.ts instead of compilerOptions.types
   * to avoid limiting type declarations.
   */
  "include": [
    "src/**/*.d.ts",
    "src/**/*.js",
    "src/**/*.ts",
    "src/App.svelte",
    "src/routes/Home.svelte",
    "src/routes/Members.svelte",
    "src/routes/Profile.svelte",
    "src/routes/View.svelte",
    "src/routes/404.svelte",
    "src/components/HeaderBar.svelte",
    "src/components/InitialLoad.svelte",
    "src/components/NavLink.svelte",
    "src/components/Panel.svelte",
    "src/components/Toast.svelte",
    "src/components/Toaster.svelte",
    "src/components/UserSelect.svelte",
    "src/components/AddMemberModal.svelte"
  ]
}
